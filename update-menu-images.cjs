#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—É—Ç–µ–π –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –≤ –º–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–º–µ–Ω—è–µ—Ç URL —Å Unsplash –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏
 */

const fs = require('fs');
const path = require('path');

const RESTAURANT_DATA_PATH = 'src/components/Restaurant/data/restaurantData.js';

// –ú–∞–ø–ø–∏–Ω–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞ –ø–∞–ø–∫–∏
const categoryToFolder = {
  'breakfast': 'breakfast',
  'soup': 'soup', 
  'salad': 'salad',
  'grill': 'grill',
  'burger': 'burger',
  'dessert': 'dessert',
  'tea': 'tea',
  'coffee': 'coffee',
  'cocktail': 'cocktail',
  'wine': 'wine',
  'beer': 'beer',
  'strong': 'strong',
  'shawarma': 'shawarma',
  'side': 'side',
  'sauce': 'sauce',
  'bread': 'bread',
  'lunch': 'lunch', 
  'dinner': 'dinner'
};

function updateMenuImages() {
  try {
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –º–µ–Ω—é...\n');
    
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –º–µ–Ω—é
    const data = fs.readFileSync(RESTAURANT_DATA_PATH, 'utf8');
    
    // –ü–∞—Ä—Å–∏–º —ç–∫—Å–ø–æ—Ä—Ç (–ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–±)
    let updatedData = data;
    
    // –ó–∞–º–µ–Ω—è–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏
    updatedData = updatedData.replace(
      /image:\s*['"](https:\/\/images\.unsplash\.com\/[^'"]+)['"]/g,
      (match, url, offset) => {
        // –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        const beforeMatch = data.substring(Math.max(0, offset - 500), offset);
        const categoryMatch = beforeMatch.match(/category:\s*['"](\w+)['"]/);
        
        if (categoryMatch) {
          const category = categoryMatch[1];
          const folder = categoryToFolder[category] || 'other';
          const filename = `${category}-dish.jpg`; // Placeholder –∏–º—è
          
          console.log(`üì∑ ${category} -> /images/menu/${folder}/${filename}`);
          
          return `image: '/images/menu/${folder}/${filename}'`;
        }
        
        return match; // –û—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –±—ã–ª–æ, –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
      }
    );
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    fs.writeFileSync(RESTAURANT_DATA_PATH, updatedData);
    
    console.log('\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('üìù –¢–µ–ø–µ—Ä—å –∑–∞–º–µ–Ω–∏—Ç–µ placeholder –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ.');
    console.log('üìÅ –î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –ø–∞–ø–∫–∏ public/images/menu/');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

function listMenuStructure() {
  console.log('üìÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫ –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –º–µ–Ω—é:\n');
  
  Object.entries(categoryToFolder).forEach(([category, folder]) => {
    const folderPath = `public/images/menu/${folder}/`;
    console.log(`   ${category.padRight ? category.padRight(10) : category} -> ${folderPath}`);
  });
  
  console.log('\nüí° –î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–∞–ø–∫–∏');
  console.log('üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: –∫–∞—Ç–µ–≥–æ—Ä–∏—è-–Ω–∞–∑–≤–∞–Ω–∏–µ.jpg');
}

function showHelp() {
  console.log(`
üçΩÔ∏è  –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –º–µ–Ω—é KAIF

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  node update-menu-images.js [–∫–æ–º–∞–Ω–¥–∞]

–ö–æ–º–∞–Ω–¥—ã:
  update      –û–±–Ω–æ–≤–∏—Ç—å –ø—É—Ç–∏ –≤ restaurantData.js
  structure   –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫  
  help        –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
  node update-menu-images.js update
  node update-menu-images.js structure
`);
}

// –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const command = process.argv[2] || 'help';

switch (command) {
  case 'update':
    updateMenuImages();
    break;
  case 'structure':
    listMenuStructure();
    break;  
  case 'help':
  default:
    showHelp();
    break;
} 